import{_ as a,c as s,a as n,o as i}from"./app-2CHEVcr4.js";const r="/assets/analyzer-D6sKsjWv.png",t={};function c(d,e){return i(),s("div",null,e[0]||(e[0]=[n(`<h1 id="生产打包" tabindex="-1"><a class="header-anchor" href="#生产打包"><span>生产打包</span></a></h1><p>最终用于上生产的文件。</p><p>指令:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> run build</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>根目录会生成一个 <code>build</code> 文件夹，里面就是生产环境需要用到的文件。</p><h1 id="产物分析" tabindex="-1"><a class="header-anchor" href="#产物分析"><span>产物分析</span></a></h1><p>执行指令：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> run analyzer</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行完后，会根据生产模式的产物去分析每个文件的资源容量占用情况，自动打开一个页面，展示分析结果。</p><p><img src="`+r+'" alt="例子"></p><p>可在全局配置中修改启动的端口 <code>ANALYZER_PORT</code>。</p>',11)]))}const p=a(t,[["render",c]]),o=JSON.parse('{"path":"/prod/introduce.html","title":"生产打包","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1716542879000,"contributors":[{"name":"庞囧","username":"","email":"980100681@qq.com","commits":1}],"changelog":[{"hash":"47888768f4a77fe3de5f7afe73ae56a99328cc39","time":1716542879000,"email":"980100681@qq.com","author":"庞囧","message":"fix: package.json"}]},"filePathRelative":"prod/introduce.md"}');export{p as comp,o as data};
