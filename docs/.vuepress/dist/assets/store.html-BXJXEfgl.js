import{_ as s,c as a,a as p,o as t}from"./app-BUsKq0jm.js";const e={};function o(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h1><p>使用 composition-api 的 <code>ref</code> 简单做了个状态管理类 （<code>src/utils/store.ts</code>），这是为了解决 <code>update</code> 数据推送监听的问题。</p><h1 id="状态管理实例化方式" tabindex="-1"><a class="header-anchor" href="#状态管理实例化方式"><span>状态管理实例化方式</span></a></h1><p><a href="/static/introduce">因为前面提到过的变量隔离问题</a>，所以状态管理必须也在类的声明中实例化。</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ModelType<span class="token punctuation">,</span> ReturnDataType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./types/model&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> appConfig <span class="token keyword">from</span> <span class="token string">&quot;../app.config&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> changeTheme <span class="token keyword">from</span> <span class="token string">&quot;@utils/change-theme&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> StateManager <span class="token keyword">from</span> <span class="token string">&quot;@utils/store&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">APP_NAME</span> <span class="token punctuation">}</span> <span class="token operator">=</span> appConfig<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 创建一个全局变量来存储root</span></span>
<span class="line"><span class="token keyword">const</span> inCosmic <span class="token operator">=</span> window<span class="token punctuation">.</span>KDApi <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span> <span class="token comment">// 是否在苍穹环境中</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">declare</span> global <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">interface</span> <span class="token class-name">Window</span> <span class="token punctuation">{</span></span>
<span class="line">    KDApi<span class="token operator">:</span> KDApiType<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">type</span> <span class="token class-name">KDApiType</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function-variable function">register</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token keyword">typeof</span> InitComponent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">InitComponent</span> <span class="token punctuation">{</span></span>
<span class="line">  model<span class="token operator">:</span> ModelType<span class="token punctuation">;</span></span>
<span class="line">  store<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span>model<span class="token operator">:</span> ModelType<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>model <span class="token operator">=</span> model<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;./App.vue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>AppModule<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> AppGlobal <span class="token operator">=</span> AppModule<span class="token punctuation">.</span>default<span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>AppGlobal<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      that<span class="token punctuation">.</span>store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StateManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 必须在类中new才能做到变量隔离</span></span>
<span class="line">      App<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$stateManager <span class="token operator">=</span> that<span class="token punctuation">.</span>store<span class="token punctuation">;</span></span>
<span class="line">      App<span class="token punctuation">.</span><span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">&quot;model&quot;</span><span class="token punctuation">,</span> model<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      App<span class="token punctuation">.</span><span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">&quot;store&quot;</span><span class="token punctuation">,</span> that<span class="token punctuation">.</span>store<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>inCosmic<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        App<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>model<span class="token punctuation">.</span>dom <span class="token keyword">as</span> HTMLElement<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// ram模式下没有window.KDApi</span></span>
<span class="line">        App<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token function">changeTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 主题色初始化</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token function">init</span><span class="token punctuation">(</span>props<span class="token operator">:</span> ReturnDataType<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;-----init&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>model<span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>store <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">triggerAction</span><span class="token punctuation">(</span><span class="token string">&quot;setAjaxData&quot;</span><span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token function">update</span><span class="token punctuation">(</span>props<span class="token operator">:</span> ReturnDataType<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;-----update&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>model<span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>store <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">triggerAction</span><span class="token punctuation">(</span><span class="token string">&quot;setAjaxData&quot;</span><span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token function">destoryed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;-----destroyed&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>model<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token punctuation">(</span>KDApi<span class="token operator">:</span> KDApiType<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  KDApi<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token constant">APP_NAME</span><span class="token punctuation">,</span> InitComponent<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 初始化应用程序</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>inCosmic<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">init</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>KDApi<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h1><p>幸运的是，由于 Vue 的设计，让我们可以在组件和 <code>.ts</code> 文件中都能访问到 store 的实例，所以都可以访问到状态和方法。</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> watch<span class="token punctuation">,</span> getCurrentInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">useInvokeAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> proxy <span class="token operator">=</span> instance<span class="token operator">?.</span>proxy <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> state <span class="token operator">=</span> proxy<span class="token punctuation">.</span>$stateManager<span class="token operator">?.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">watch</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;update触发了&quot;</span><span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>当然你也可以把这个简单的 store 换成 Pinia。</strong></p>`,9)]))}const i=s(e,[["render",o]]),u=JSON.parse('{"path":"/vue/store.html","title":"背景","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1716962156000,"contributors":[{"name":"庞囧","username":"","email":"980100681@qq.com","commits":2}],"changelog":[{"hash":"82a6c2228643913b5162db9f46c608bcae6fc5bf","time":1716962156000,"email":"980100681@qq.com","author":"庞囧","message":"doc：修改文档内容"},{"hash":"47888768f4a77fe3de5f7afe73ae56a99328cc39","time":1716542879000,"email":"980100681@qq.com","author":"庞囧","message":"fix: package.json"}]},"filePathRelative":"vue/store.md"}');export{i as comp,u as data};
